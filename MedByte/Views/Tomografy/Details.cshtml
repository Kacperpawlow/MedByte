@model Medbyte.Models.Tomograf


@{
    ViewData["Title"] = "Details";
    var zarezerwowaneDaty = ViewBag.ZarezerwowaneDaty as List<DateTime>;
}

<div class="container mt-4">
    <div class="row">
        <div class="col-md-5">
            @if (!string.IsNullOrEmpty(Model.ImagePath))
            {
                <div class="image-container">
                    <img src="@Model.ImagePath" alt="Image" class="img-fluid mb-3" />
                </div>
            }
        </div>
        <div class="col-md-7">
            <table class="table">
                <tr>
                    <th>Adres:</th>
                    <td>@Model.Ulica, @Model.Miasto, @Model.KodPocztowy</td>
                </tr>
                <tr>
                    <th>Telefon:</th>
                    <td>@Model.Telefon</td>
                </tr>
                <tr>
                    <th>Opis:</th>
                    <td>@Model.Opis</td>
                </tr>
            </table>
            <button id="toggleFormButton" class="btn btn-warning mb-3">Chcesz zarezerwować wizytę?</button>
            <div id="reservationForm" style="display: none;">
                <form asp-action="Create" asp-controller="Rezerwacja" method="post">
                    <input type="hidden" name="tomografId" value="@Model.Id" />
                    <div class="form-group">
                        <label for="data">Wybierz datę:</label>
                        <input type="date" id="data" name="data" class="form-control form-control-sm" required />
                    </div>
                    <div class="form-group">
                        <label for="imie">Imię:</label>
                        <input type="text" id="imie" name="imie" class="form-control form-control-sm" required />
                    </div>
                    <div class="form-group">
                        <label for="nazwisko">Nazwisko:</label>
                        <input type="text" id="nazwisko" name="nazwisko" class="form-control form-control-sm" required />
                    </div>
                    <div class="form-group">
                        <label for="pesel">PESEL:</label>
                        <input type="text" id="pesel" name="pesel" class="form-control form-control-sm" required pattern="\d{11}" minlength="11" maxlength="11" title="PESEL powinien składać się z 11 cyfr" />
                    </div>
                    <button type="submit" class="btn btn-primary">Rezerwuj</button>
                </form>

            </div>
        </div>
    </div>

    <h3>Zarezerwowane terminy</h3>
    <div id="calendar"></div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.2/fullcalendar.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.2/fullcalendar.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>

    <script>
        $(document).ready(function () {
            const reservedDates = @Html.Raw(Json.Serialize(zarezerwowaneDaty.Select(d => d.ToString("yyyy-MM-dd")).ToList()));

            $('#calendar').fullCalendar({
                events: reservedDates.map(date => ({ start: date, allDay: true, color: 'gray' })),
                selectable: true,
                selectHelper: true,
                select: function (start, end, jsEvent, view) {
                    const dateStr = start.format('YYYY-MM-DD');
                    if (!reservedDates.includes(dateStr) && start >= moment().startOf('day')) {
                        $('#data').val(dateStr);
                    }
                    $('#calendar').fullCalendar('unselect');
                },
                dayRender: function (date, cell) {
                    if (reservedDates.includes(date.format('YYYY-MM-DD')) || date < moment().startOf('day')) {
                        cell.css("background-color", "gray");
                    }
                }
            });

            $('#toggleFormButton').click(function () {
                $('#reservationForm').slideToggle();
            });

            $("#data").datepicker({
                dateFormat: 'yy-mm-dd',
                beforeShowDay: function (date) {
                    const dateString = $.datepicker.formatDate('yy-mm-dd', date);
                    if (reservedDates.includes(dateString) || date < new Date()) {
                        return [false, "reserved-date", "This date is already reserved"];
                    }
                    return [true, "", ""];
                }
            });

            $.datepicker.regional['pl'] = {
                closeText: 'Zamknij',
                prevText: '&#x3C;Poprzedni',
                nextText: 'Następny&#x3E;',
                currentText: 'Dziś',
                monthNames: ['Styczeń', 'Luty', 'Marzec', 'Kwiecień', 'Maj', 'Czerwiec',
                    'Lipiec', 'Sierpień', 'Wrzesień', 'Październik', 'Listopad', 'Grudzień'],
                dayNamesMin: ['Nd', 'Pn', 'Wt', 'Śr', 'Cz', 'Pt', 'So'],
                firstDay: 1,
            };

            $.datepicker.setDefaults($.datepicker.regional['pl']);
        });
    </script>

    <style>
        .image-container {
            width: 100%;
            height: 500px;
            overflow: hidden;
            display: flex;
            justify-content: center;
            align-items: center;
        }

            .image-container img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }

        #reservationForm {
            width: 70%;
        }

        .form-group .form-control-sm {
            height: calc(1.5em + .75rem + 2px);
            padding: .25rem .5rem;
            font-size: .875rem;
            line-height: 1;
            border-radius: .2rem;
        }
    </style>
}
